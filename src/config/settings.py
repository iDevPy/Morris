"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from decouple import config
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', cast=bool)

ALLOWED_HOSTS = [
    "192.168.86.22",
    "localhost",
    "127.0.0.1",
    "wpad.kp.org",
]


# Application definition

INSTALLED_APPS = [
    "whitenoise.runserver_nostatic", # whitenoise
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 3rd Party Apps
    'compressor',
    "django_htmx",
    # Local Apps
    'apps.testing.apps.TestingConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',    
    "whitenoise.middleware.WhiteNoiseMiddleware", # Whitenoise
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_htmx.middleware.HtmxMiddleware", #django-htmx
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "assets" / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('DATABASE_ENGINE'),
        'NAME': config('DATABASE_NAME'),
        'HOST': config('DATABASE_HOST'),
        # PostgresQL
        'USER': config('DATABASE_USER'),
        'PASSWORD': config('DATABASE_PASSWORD'),
        'PORT': config('DATABASE_PORT'),
        # MS SQL
        # "Trusted_Connection": "yes",
        # 'OPTIONS': {
        #     'driver': config('DATABASE_DRIVER'), #'ODBC Driver 17 for SQL Server',
        # },
    }
}

# For SQLAlchemy connections e.g. pandas.to_sql()
# Read this to learn how to configure the sqlalchemy engine URL for different databases.
# https://docs.sqlalchemy.org/en/20/core/engines.html

ENGINE_URL = 'postgresql://' + \
    config('DATABASE_USER') + ':' + \
    config('DATABASE_PASSWORD') + '@' + \
    config('DATABASE_HOST') + ':' + \
    config('DATABASE_PORT') + '/' + \
    config('DATABASE_NAME')

# ENGINE_URL = "mssql+pyodbc:///?odbc_connect={}".format(";".join([
#     "DRIVER=" + config('DATABASE_DRIVER'),
#     "SERVER=" + config('DATABASE_HOST'),
#     "DATABASE=" + config('DATABASE_NAME'),
#     "Trusted_Connection=yes"
#     ]))

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

MEDIA_ROOT = BASE_DIR.parent / "media"
MEDIA_URL = '/media/'
STATIC_ROOT = BASE_DIR.parent / "static"
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    BASE_DIR / "assets" / "static",
)

# Flowbite requirements
if DEBUG == False: # if on production
    COMPRESS_ROOT = BASE_DIR.parent / "static"
    COMPRESS_ENABLED = True
    STATICFILES_FINDERS = ('compressor.finders.CompressorFinder',)

# Whitenoise configuration
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# SECURITY WARNING: keep the API a secret
NCBI_API_KEY = config('NCBI_API_KEY')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
